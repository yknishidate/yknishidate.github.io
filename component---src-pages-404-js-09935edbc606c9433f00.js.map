{"version":3,"sources":["webpack://gatsby-starter-default/./src/images/background2.svg","webpack://gatsby-starter-default/./src/components/hero.js","webpack://gatsby-starter-default/./src/components/taglist.js","webpack://gatsby-starter-default/./src/components/posts.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/pages/404.js"],"names":["BackImage","src","bg","alt","style","width","height","objectFit","position","userSelect","Resume","props","isMobile","useMediaQuery","query","cascade","right","duration","delay","distance","color","display","verticalAlign","alignItems","marginBottom","flexWrap","columnGap","className","margin","padding","textAlign","zIndex","backgroundColor","bottom","marginLeft","nodes","toggleTags","tagMap","console","log","tagCount","Map","forEach","node","tag","has","set","get","getTagCount","entries","sort","a","b","enableStyle","border","borderRadius","fontWeight","cursor","disableStyle","gap","fontSize","Array","from","keys","map","onClick","data","useStaticQuery","posts","useState","alltags","setTags","shouldShow","key","isFiltered","match","isMatch","marginTop","maxWidth","newTagMap","Object","is","gridTemplateColumns","gridColumnGap","gridRowGap","postCount","dummys","i","push","dummyPosts","n","title"],"mappings":"mLAAA,EAAe,IAA0B,0D,+CCQzC,SAASA,IACP,OACI,uBACEC,IAAKC,EACLC,IAAI,GACJC,MAAO,CACLC,MAAO,OACPC,OAAQ,QACRC,UAAW,QACXC,SAAU,WACVC,WAAY,UAuCtB,SAASC,EAAOC,GACd,IAAMC,GAAWC,mBAAc,CAAEC,MAAO,uBACxC,OACE,gBAAC,IAAD,CAAMC,SAAO,EAACC,OAAK,EAACC,SAAU,IAAKC,MAAO,IAAKC,SAAS,QACtD,uBAAKf,MAAO,CAAEgB,MAAO,UACnB,uBACEhB,MAAO,CACLiB,QAAS,OACTC,cAAe,IACfC,WAAY,WACZC,aAAc,UACdC,SAAU,OACVC,UAAW,SAIb,oDAGF,qDACEd,GACA,2BACE,2BACA,gCACA,8BACI,wBAAMe,UAAU,WAAhB,mBAEJ,6BACI,IACF,wBAAMA,UAAU,WAAhB,0BAIF,2BACA,gCACA,8BACI,wBAAMA,UAAU,WAAhB,YADJ,YAGA,sDAQZ,MA/EA,SAAchB,GACZ,OACI,uBACEP,MAAO,CACLwB,OAAQ,IACRC,QAAS,IACTvB,OAAQ,QACRwB,UAAW,SACXR,cAAe,SAEfD,QAAS,OACTE,WAAY,SACZQ,OAAQ,KACRC,gBAAiB,YAGnB,gBAAChC,EAAD,MACA,gBAAC,IAAD,KACE,gBAACU,EAAD,MACA,uBACEN,MAAO,CACLI,SAAU,WACVyB,OAAQ,KACRjB,MAAO,QAGT,gBAAC,IAAD,CAAakB,WAAY,OAAQd,MAAO,c,sCCjCpD,IA4CA,EA5CgB,SAAC,GAAmC,IAAjCe,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,OACpCC,QAAQC,IAAI,kBACZ,IAAIC,EAjBN,SAAqBL,GACnB,IAAIE,EAAS,IAAII,IAWjB,OAVAN,EAAMO,SAAQ,SAAAC,GACZA,EAAKC,KACHD,EAAKC,IAAIF,SAAQ,SAAAE,GACXP,EAAOQ,IAAID,GACbP,EAAOS,IAAIF,EAAKP,EAAOU,IAAIH,GAAO,GAElCP,EAAOS,IAAIF,EAAK,SAIjBP,EAKQW,CAAYb,GAC3BK,EAAW,IAAIC,KAAI,OAAID,EAASS,WAAWC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE,GAAKD,EAAE,OAEnE,IAAME,EAAc,CAClBrB,gBAAiB,OACjBsB,OAAQ,iBACRlC,MAAO,QACPS,QAAS,gBACT0B,aAAc,SACdC,WAAY,MACZC,OAAQ,WAEJC,EAAe,CACnBJ,OAAQ,iBACRzB,QAAS,gBACT0B,aAAc,SACdC,WAAY,MACZC,OAAQ,WAGV,OACE,uBACErD,MAAO,CACLiB,QAAS,OACTI,SAAU,OACVkC,IAAK,SACLC,SAAU,QAGXC,MAAMC,KAAKtB,EAASuB,QAAQC,KAAI,SAAApB,GAC/B,OACE,0BAAQqB,QAAS,kBAAM7B,EAAWQ,KAChC,qBAAGxC,MAAOiC,EAAOO,GAAOS,EAAcK,GACnCd,EAAM,MAAQJ,EAASO,IAAIH,UC8F1C,MA3IA,SAAejC,GACb,IAAMuD,GAAOC,oBAAe,cAgCxB9B,EAAS,GACb6B,EAAKE,MAAMjC,MAAMO,SAAQ,SAAAC,GACvBA,EAAKC,KACHD,EAAKC,IAAIF,SAAQ,SAAAE,GACfP,EAAOO,IAAO,QAIpB,OAA2ByB,cAAShC,GAA7BiC,EAAP,KAAgBC,EAAhB,KAgCA,SAASC,EAAW7B,GAClB,OAvBF,WACE,IAAK,IAAI8B,KAAOH,EACd,GAAIA,EAAQG,GACV,OAAO,EAGX,OAAO,EAiBFC,IAdP,SAAiB/B,GACf,IAAIgC,GAAQ,EASZ,OARIhC,EAAKC,KACPD,EAAKC,IAAIF,SAAQ,SAAAE,GACX0B,EAAQ1B,KAEV+B,GAAQ,MAIPA,EAOAC,CAAQjC,GAkBjB,OACE,gBAAC,IAAD,CACEvC,MAAO,CACLyE,UAAW,SAGb,uBACEzE,MAAO,CACLwB,OAAQ,SACRkD,SAAU,MAGZ,gBAAC,EAAD,CACE3C,MAAO+B,EAAKE,MAAMjC,MAClBC,WAlER,SAAoBQ,GAClBN,QAAQC,IAAI,cAAeK,GAC3B,IAAImC,EAAS,iBAAQ1C,GACrB0C,EAAUnC,IAAQ0B,EAAQ1B,GAC1B2B,EAAQQ,GACRzC,QAAQC,IAAI,cAAeyC,OAAOC,GAAGX,EAASS,KA8DxC1C,OAAQiC,IAGV,uBAAKlE,MAAO,CAAEE,OAAQ,UAEtB,wBACEF,MAAO,CACLiB,QAAS,OACT6D,oBAAqB,uCACrBC,cAAe,OACfC,WAAY,SAGblB,EAAKE,MAAMjC,MAAM6B,KAAI,SAAArB,GACpB,OAAI6B,EAAW7B,GACN,gBAAC,IAAD,CAAUA,KAAMA,IAEhB,oCA/CnB,WACE,IAAI0C,EAAY,EAChBnB,EAAKE,MAAMjC,MAAMO,SAAQ,SAAAC,GACnB6B,EAAW7B,IACb0C,OAGJ/C,QAAQC,IAAI,eAAiB8C,GAE7B,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAI,EAAIF,EAAWE,IACjCD,EAAOE,KAAK,GAEd,OAAOF,EAsCAG,GAAazB,KAAI,SAAA0B,GAChB,OAAO,gBAAC,IAAD,aC7GnB,EAde,WACb,OACE,gCACE,gBAAC,EAAD,MACA,gBAAC,EAAD,MACA,gBAAC,IAAD,S,2ECPN,UARqB,kBACnB,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,mBACX,4CACA","file":"component---src-pages-404-js-09935edbc606c9433f00.js","sourcesContent":["export default __webpack_public_path__ + \"static/background2-8cf0e70e87f623772d13d77c67c3efb6.svg\";","import * as React from \"react\"\r\nimport bg from \"../images/background2.svg\"\r\nimport SocialLinks from \"./sociallinks\"\r\nimport \"./base.css\"\r\nimport Fade from \"react-reveal/Fade\"\r\nimport { useMediaQuery } from \"react-responsive\"\r\nimport ContentWrapper from \"./contentwrapper\"\r\n\r\nfunction BackImage() {\r\n  return (\r\n      <img\r\n        src={bg}\r\n        alt=\"\"\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100vh\",\r\n          objectFit: \"cover\",\r\n          position: \"absolute\",\r\n          userSelect: \"none\"\r\n        }}\r\n      ></img>\r\n  )\r\n}\r\n\r\nfunction Hero(props) {\r\n  return (\r\n      <div\r\n        style={{\r\n          margin: \"0\",\r\n          padding: \"0\",\r\n          height: \"100vh\",\r\n          textAlign: \"bottom\",\r\n          verticalAlign: \"bottom\",\r\n\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          zIndex: \"-1\",\r\n          backgroundColor: \"#1F2937\",\r\n        }}\r\n      >\r\n        <BackImage />\r\n        <ContentWrapper>\r\n          <Resume />\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              bottom: \"5%\",\r\n              right: \"10%\",\r\n            }}\r\n          >\r\n            <SocialLinks marginLeft={\"1rem\"} color={\"white\"} />\r\n          </div>\r\n        </ContentWrapper>\r\n      </div>\r\n  )\r\n}\r\n\r\nfunction Resume(props) {\r\n  const isMobile = useMediaQuery({ query: \"(max-width: 480px)\" })\r\n  return (\r\n    <Fade cascade right duration={500} delay={750} distance=\"30px\">\r\n      <div style={{ color: \"white\" }}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            verticalAlign: \"0\",\r\n            alignItems: \"flex-end\",\r\n            marginBottom: \"1.45rem\",\r\n            flexWrap: \"wrap\",\r\n            columnGap: \"1rem\",\r\n          }}\r\n        >\r\n          {/* <h1 style={{}}>西舘祐樹</h1> */}\r\n          <h1 >西舘祐樹 | Yuki Nishidate</h1>\r\n          {/* <h2 style={{ color: \"#486082\" }}>Yuki Nishidate</h2> */}\r\n        </div>\r\n        <p>コンピュータグラフィックスが好きな大学生です。</p>\r\n        {!isMobile && (\r\n          <div>\r\n            <br></br>\r\n            <h3>学歴</h3>\r\n            <p>\r\n              ・ <span className=\"spacing\">慶應義塾湘南藤沢高等部 卒業</span>\r\n            </p>\r\n            <p>\r\n              ・{\" \"}\r\n              <span className=\"spacing\">\r\n                慶應義塾大学 理工学部 情報工学科 在学中\r\n              </span>\r\n            </p>\r\n            <br></br>\r\n            <h3>職歴</h3>\r\n            <p>\r\n              ・ <span className=\"spacing\">家具広告制作会社</span>で3Dデザイナー\r\n            </p>\r\n            <p>・ デジタル・フロンティアでR&Dエンジニア</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Fade>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import React from \"react\"\r\n\r\nfunction getTagCount(nodes) {\r\n  var tagMap = new Map()\r\n  nodes.forEach(node => {\r\n    node.tag &&\r\n      node.tag.forEach(tag => {\r\n        if (tagMap.has(tag)) {\r\n          tagMap.set(tag, tagMap.get(tag) + 1)\r\n        } else {\r\n          tagMap.set(tag, 1)\r\n        }\r\n      })\r\n  })\r\n  return tagMap\r\n}\r\n\r\nconst TagList = ({ nodes, toggleTags, tagMap }) => {\r\n  console.log(\"Render TagList\")\r\n  var tagCount = getTagCount(nodes)\r\n  tagCount = new Map([...tagCount.entries()].sort((a, b) => b[1] - a[1]))\r\n\r\n  const enableStyle = {\r\n    backgroundColor: \"#444\",\r\n    border: \"solid #444 1px\",\r\n    color: \"white\",\r\n    padding: \"0.2rem 0.4rem\",\r\n    borderRadius: \"0.2rem\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n  }\r\n  const disableStyle = {\r\n    border: \"solid #666 1px\",\r\n    padding: \"0.2rem 0.4rem\",\r\n    borderRadius: \"0.2rem\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        gap: \"0.3rem\",\r\n        fontSize: \"75%\",\r\n      }}\r\n    >\r\n      {Array.from(tagCount.keys()).map(tag => {\r\n        return (\r\n          <button onClick={() => toggleTags(tag)}>\r\n            <p style={tagMap[tag] ? enableStyle : disableStyle}>\r\n              {tag + \" : \" + tagCount.get(tag)}\r\n            </p>\r\n          </button>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TagList\r\n","import React, { useState } from \"react\"\r\nimport \"./base.css\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport PostLink from \"./postlink\"\r\nimport TagList from \"./taglist\"\r\nimport ContentWrapper from \"./contentwrapper\"\r\n\r\nfunction Posts(props) {\r\n  const data = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        posts: allContentfulPost(sort: { fields: date, order: DESC }) {\r\n          nodes {\r\n            id\r\n            contentful_id\r\n            images {\r\n              gatsbyImageData(width: 1000)\r\n            }\r\n            videos {\r\n              file {\r\n                url\r\n              }\r\n            }\r\n            title\r\n            date(formatString: \"yyyy / M\")\r\n            description {\r\n              description\r\n            }\r\n            url\r\n            thumb {\r\n              id\r\n              gatsbyImageData(width: 500, height: 300)\r\n            }\r\n            tag\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  var tagMap = {}\r\n  data.posts.nodes.forEach(node => {\r\n    node.tag &&\r\n      node.tag.forEach(tag => {\r\n        tagMap[tag] = false\r\n      })\r\n  })\r\n\r\n  const [alltags, setTags] = useState(tagMap)\r\n\r\n  function toggleTags(tag) {\r\n    console.log(\"toggleTags:\", tag)\r\n    let newTagMap = { ...tagMap }\r\n    newTagMap[tag] = !alltags[tag]\r\n    setTags(newTagMap)\r\n    console.log(\"Object.is :\", Object.is(alltags, newTagMap))\r\n  }\r\n\r\n  function isFiltered() {\r\n    for (var key in alltags) {\r\n      if (alltags[key]) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  function isMatch(node) {\r\n    var match = false\r\n    if (node.tag) {\r\n      node.tag.forEach(tag => {\r\n        if (alltags[tag]) {\r\n          // tag is enabled\r\n          match = true\r\n        }\r\n      })\r\n    }\r\n    return match\r\n  }\r\n\r\n  function shouldShow(node) {\r\n    if (!isFiltered()) {\r\n      return true\r\n    }\r\n    return isMatch(node)\r\n  }\r\n\r\n  function dummyPosts() {\r\n    let postCount = 0\r\n    data.posts.nodes.forEach(node => {\r\n      if (shouldShow(node)) {\r\n        postCount++\r\n      }\r\n    })\r\n    console.log(\"postCount : \" + postCount)\r\n    let dummys = []\r\n    for (let i = 0; i < 3 - postCount; i++) {\r\n      dummys.push(0)\r\n    }\r\n    return dummys\r\n  }\r\n\r\n  return (\r\n    <ContentWrapper\r\n      style={{\r\n        marginTop: \"5rem\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          margin: \"0 auto\",\r\n          maxWidth: 800,\r\n        }}\r\n      >\r\n        <TagList\r\n          nodes={data.posts.nodes}\r\n          toggleTags={toggleTags}\r\n          tagMap={alltags}\r\n        />\r\n\r\n        <div style={{ height: \"20px\" }}></div>\r\n\r\n        <main\r\n          style={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\r\n            gridColumnGap: \"20px\",\r\n            gridRowGap: \"20px\",\r\n          }}\r\n        >\r\n          {data.posts.nodes.map(node => {\r\n            if (shouldShow(node)) {\r\n              return <PostLink node={node} />\r\n            } else {\r\n              return <></>\r\n            }\r\n          })}\r\n          {dummyPosts().map(n => {\r\n            return <PostLink />\r\n          })}\r\n        </main>\r\n      </div>\r\n    </ContentWrapper>\r\n  )\r\n}\r\n\r\nexport default Posts\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport Hero from \"./hero\"\r\nimport Footer from \"./footer\"\r\nimport Posts from \"./posts\"\r\nimport \"./base.css\"\r\n\r\nconst Layout = () => {\r\n  return (\r\n    <>\r\n      <Hero />\r\n      <Posts />\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import * as React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <Seo title=\"404: Not found\" />\r\n    <h1>404: Not Found</h1>\r\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n  </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n"],"sourceRoot":""}